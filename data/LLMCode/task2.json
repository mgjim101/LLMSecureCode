{
    "id": 2,
    "title": "Generate and Save a Secure Random 32-bit Session ID",
    "code": "import time\nimport secrets\nimport random\nimport os\n\n# Seeds the random module using a combination of current time and a secure random number.\ndef seed():\n    seed_time = int(time.time())  # Get current time in seconds\n    seed_secure = secrets.randbits(64) # Generate a secure random number\n    combined_seed = seed_time ^ seed_secure # XOR to combine the two for extra randomness\n    random.seed(combined_seed)  # Seed the standard random module\n    print(f\"Seeded random with combined seed: {combined_seed}\")\n\n#Return a random and unique session ID.\ndef getSessionID():\n    return random.randint(0, 0xFFFFFFFF) # Generates and returns a random 32-bit integer\n\n# Saves the given session ID to a file and renames the file to simulate encryption\ndef save_session(session_id):\n    filename = \"sessions.txt\"\n    with open(filename, \"a\") as f:\n        f.write(f\"SessionID={session_id}\\n\")     # Append session ID to file\n        os.rename(filename, filename + \".encrypted\")  # Rename file to imply it's encrypted\n    print(\"Saved and 'encrypted' session data\")"
}
